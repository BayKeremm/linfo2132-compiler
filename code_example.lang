//final int b = 3-"kaka";
//
//
//final int k = true && "A";
//final int i = (2+2/(3*"s"));
//
//
//final int i = 1*2.0;
//final int j = i + 1;
//final int j = 1 + ((2+10)/1 - (4*5.0));
//final int a = 3+2;
//final bool b = true == true;
//final bool c = 2 == 3;
//final int ab = 3 % 2;
//
//
//
//
//final bool k = true && 2;
//
//
//final int a = 3 % 2 + 10;
//
//final int a = 3 * 2000;
//
//final bool a = 3 == 2+1;
//
//final bool a = 3 != 2;
//
//
//
//
//final float j = 3.2*5.0;
//
//final int i = -9;
//
//final int j = -"a";
//
//final bool a = ! true;






// ---------------------------------------------------------------
final int a = (((2+2)-4)*2) / 3.0;
final int i = 2*2+4;
final string k = "kerem";
final bool bol = (i+2)*3 == 1;

final float f = 3.2;

final int j = f*2;



final bool b = true;
final int[] arr = int[5];


struct Point {
  int x;
  int y;
  string[] names;
}


struct Person {
  string name;
  Point location;
  int[] history;

}

//Point p = Point(3,7,string[5]);
//
//Point[] please = Point[5];
//
//int aaa = please[0].x;
//
//
//
//
//int[] kerem = int[10];
//
//int elfje = kerem[i];


// ---------------------------------------------------------------

//Person d = Person("KEREM", Point(3,7,string[5]), int[i*2]);  // new structure


//string[] bbb = d.location.names;



//string name = d.name;
//
//
//
//int[] history = d.history;
//int one = history[1];
//
//Point location = d.location;
//string[] names = location.names;
//string one_name = names[0];


//int aaa = 3;
//
//int i = d.location.names[0];
//int j = d.location.x;
//
//Point p = Point(3,7,string[5]);
//int x = p.name[0];
//
//int[] c = int[5];  // new array of length 5
//int x = c[5];



def int square(int x, int y, int x ) {
    while(i < 3){
        i = i + 1;
    }
    return "a";
}




//
//def Point copyPoints(Point[] p) {
//    return Point(p[0].x+p[1].x, p[0].y+p[1].y);
//}
//
//
//def int square(int x, int y, int x ) {
//    int i = 4;
//    while(i<100){
//        if(i > 3){
//            int x = 5;
//            return 1;
//        }else{
//            int y = 5;
//            return 2;
//        }
//        i = i+1;
//    }
//}
//
//
//
//
//
//
//
//
//def int square(int x, int y, int x ) {
//    int x = 4*(4+2);
//    int i;
//    while(i < 3){
//        i = i + 1;
//    }
//}
////
////
//def int square(int v) {
//    return v*v;
//}
////
//def Point copyPoints(Point[] p) {
//    return Point(p[0].x+p[1].x, p[0].y+p[1].y);
//}
////
//def void main() {
//    int value = readInt();
//    writeln(square(value));
//    int i;
//    for (i=1, i<100, i = i+1) {
//        while (value!=square(3)) {
//            if (i > 10){
//                int x = i;
//            }
//            else {
//                int y = i;
//            }
//            i = i+1;
//        }
//    }
//}