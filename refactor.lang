final int x = 10+(2*(-2));
final bool y = !false;
final float z = 3.0 % 2;

final int xx = 10+(2*(-2));
final float zz = 3.0 % 2;

struct Point {
    int x;
    int y;
}
Point pp = Point(2,4);

int bruh = 5;
int[] manyak = int[10];
bool yy = !false;

int a = 3;
def void main() {
// STRUCT TEST
    Point p = Point(10,20);
    writeInt(pp.x + p.x);
    writeInt(pp.y + p.y);

// IF ELSE TEST
    int i = 1;
    bool b = false;
    if(b){
        writeInt(i);
    }else{
        int i = 2;
        writeInt(i);
    }
    writeInt(i);

// FOR TEST
    int ii;
    for (ii=5, ii>0, ii = ii-1) {
        writeInt(ii);
        int i = 10;
        writeInt(i);
    }
    writeInt(i);

// WHILE TEST
    int iii = 0;
    while(iii < 3){
        write("iii is:");
        writeInt(iii);
        iii = iii + 1;
        int i = 2;
        write("i in while scope is: ");
        writeInt(i);
    }

// COMBINED CONTROL TESTS
    int idx;
    for(idx=0, idx < 10, idx = idx+1){
        int i = 0;
        while(i < 2){
            write("i inside while combined: ");
            writeInt(i);
            i = i + 1;
            if(idx % 2 == 0){
                write("idx is even ");
                writeInt(idx);
            }else{
                write("idx is oneven ");
                writeInt(idx);
            }
        }
    }

    string empty;
    write(empty);




    float j;
    j = i + 1.0;
    writeFloat(j);

    if(y){
        write(" y is true");
    }else{
        write(" y is false");
    }

    if(yy){
        write(" yy is true");
    }else{
        write(" yy is false");
    }

    manyak[0] = 2;
    writeInt(manyak[0]);
    writeInt(bruh);
    write(" ");
    write(" ");
    write(" ");
    writeInt(x);
    writeFloat(z);
    writeInt(xx);
    writeFloat(zz);
    int bro = 2+2*(-2);
    writeInt(bro);

    string[] kerem = string[5];
    kerem[0]="1";
    kerem[0]="kerem 0";
    kerem[1]="aaa";
    kerem[2]="aaaaaa";
    write(kerem[0]);
    write(kerem[1]);
    write(kerem[2]);

    writeInt(a);

    string k = "heloo";
    write(k);

    int[] aa = int[5];
    aa[0] = 2;
    writeInt(aa[0]);
    writeInt(aa[1]);




}

// TODO: Adding the constants fuck up the  stack

